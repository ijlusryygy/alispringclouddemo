<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>alibaba.springcloud.demo</groupId>
    <artifactId>alispringclouddemo</artifactId>
    <packaging>pom</packaging>
    <version>1.2.0</version>

    <properties>

        <spring.boot.version>2.3.1.RELEASE</spring.boot.version>
        <io.projectreactor.version>3.3.6.RELEASE</io.projectreactor.version>
        <reversion>1.1.0</reversion>
        <java.version>1.8</java.version>


        <maven_flatten_version>1.1.0</maven_flatten_version>
        <maven_compiler_version>3.6.0</maven_compiler_version>
        <java_source_version>1.8</java_source_version>
        <java_target_version>1.8</java_target_version>
        <file_encoding>UTF-8</file_encoding>
        <project_build_sourceEncoding>UTF-8</project_build_sourceEncoding>

    </properties>

    <modules>
        <module>OpenApi-Payment</module>
        <module>Gateway</module>
        <module>Payment</module>
        <module>Demo-All</module>
    </modules>

    <!-- 私有仓库 -->
    <repositories>
        <repository>
            <id>thirdparty</id>
            <name>Team Nexus Repository</name>
            <url>http://192.168.72.50:8081/nexus/repository/maven-public</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://192.168.72.50:8081/nexus/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://192.168.72.50:8081/nexus/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <scope>test</scope>
                <version>3.3.6.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- 版本管理
                 mvn versions:set -DnewVersion=1.0.3-SNAPSHOT
                 执行完之后，POM文件的版本会修改为1.0.3-SNAPSHOT，旧的文件将会被拷贝到pom.xml.versionsBackup这样的一份文件里面作为备份存在
                 或
                 mvn versions:set -DnewVersion=2.0.0-SNAPSHOT -f enforcer/pom.xml

                 然后项目中的依赖以及聚集的依赖版本都会被一起更新，也可以采用通配符来进行匹配
                 mvn versions:set -DgroupId=org.apache.maven.* -DartifactId=* -DoldVersion=2.* -DnewVersion=2.1.0-SNAPSHOT

                 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven_flatten_version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven_compiler_version}</version>
                <configuration>
                    <compilerArgument>-proc:none</compilerArgument>
                    <fork>true</fork>
                    <source>${java_source_version}</source>
                    <target>${java_target_version}</target>
                    <encoding>${file_encoding}</encoding>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <encoding>${project_build_sourceEncoding}</encoding>
                </configuration>
            </plugin>


        </plugins>
    </build>

</project>